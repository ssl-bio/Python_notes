#+Title: Exercises chapter 17: Working with APIs
#+Author: Saul SL
#+date: June 2023
#+options: broken-links:t ^:{} toc:nil
#+SETUPFILE: ../../latex_conf.org

* 17-1. Other Languages
Modify the API call in =python_repos.py= so it generates a chart showing the most popular projects in other languages. Try languages such as JavaScript, Ruby, C, Java, Perl, Haskell, and Go.
#+INCLUDE: "17-1.py" src python -i

#+label: fig:rust_repos
#+name: fig:rust_repos
#+caption: Top GitHub repositories (based on number of stars) for Rust language
#+attr_latex: :width \textwidth
[[./images/rust_repos_v1.png]]

#+latex: \clearpage{}
* 17-2. Active Discussions
Using the data from hn_submissions.py, make a bar chart showing the most active discussions currently happening on Hacker News. The height of each bar should correspond to the number of comments each submission has. The label for each bar should include the submission’s title and should act as a link to the discussion page for that submission.
#+INCLUDE: "17-2.py" src python -i

#+label: fig:hacker_news
#+name: fig:hacker_news
#+caption: Top active discussions on Hacker News (based on the number of comments)
#+attr_latex: :width \textwidth
[[./images/Hacker_news_v1.png]]
#+latex: \clearpage{}

* 17-3. Testing python_repos.py
In =python_repos.py=, we printed the value of =status_code= to make sure the API call was successful. Write a program called =test_python_repos.py= that uses unittest to assert that the value of =status_code= is 200. Figure out some other assertions you can make—for example, that the number of items returned is expected and that the total number of repositories is greater than a certain amount.
** Define functions to query GitHub
#+INCLUDE: "search_github_repos.py" src python -i

** Test functions
#+INCLUDE: "test_search_github_repos.py" src python -i

* 17-4. Further Exploration
Visit the documentation for Plotly and either the GitHub API or the Hacker News API. Use some of the information you find there to either customize the style of the plots we’ve already made or pull some different information and create your own visualizations.
#+INCLUDE: "17-4.py" src python -i
#+label: fig:python_repos
#+name: fig:python_repos
#+caption: Top GitHub repositories (based on number of stars) for Python language. 
#+attr_latex: :width \textwidth
[[./images/Python_repos_px_v1.png]]
